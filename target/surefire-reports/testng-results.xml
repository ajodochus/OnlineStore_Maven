<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[SignIn Action is successfully perfomred]]>
    </line>
    <line>
      <![CDATA[Verification Passed for Product Name on Check Out page.]]>
    </line>
    <line>
      <![CDATA[Verification Passed for Product Price on Check Out page.]]>
    </line>
    <line>
      <![CDATA[Payment is successfully perfromed for the purchased product.]]>
    </line>
    <line>
      <![CDATA[Verification Passed for Product Name on Confirmation page]]>
    </line>
    <line>
      <![CDATA[Verification Passed for Product Price on Confirmation page]]>
    </line>
    <line>
      <![CDATA[Verification Passed for Product Name]]>
    </line>
    <line>
      <![CDATA[Verification Failed for Product Price]]>
    </line>
  </reporter-output>
  <suite name="Command line suite" duration-ms="51706" started-at="2015-11-26T18:28:13Z" finished-at="2015-11-26T18:29:05Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="51706" started-at="2015-11-26T18:28:13Z" finished-at="2015-11-26T18:29:05Z">
      <class name="test.java.Framework_001Test">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.java.Framework_001Test@15975490]" name="beforeMethod" is-config="true" duration-ms="10299" started-at="2015-11-26T19:28:13Z" finished-at="2015-11-26T19:28:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="main()[pri:0, instance:test.java.Framework_001Test@15975490]" name="main" duration-ms="41357" started-at="2015-11-26T19:28:23Z" finished-at="2015-11-26T19:29:05Z">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[Test Case Failed because of Verification]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: Test Case Failed because of Verification
	at test.java.Framework_001Test.main(Framework_001Test.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
            <line>
              <![CDATA[SignIn Action is successfully perfomred]]>
            </line>
            <line>
              <![CDATA[Verification Passed for Product Name on Check Out page.]]>
            </line>
            <line>
              <![CDATA[Verification Passed for Product Price on Check Out page.]]>
            </line>
            <line>
              <![CDATA[Payment is successfully perfromed for the purchased product.]]>
            </line>
            <line>
              <![CDATA[Verification Passed for Product Name on Confirmation page]]>
            </line>
            <line>
              <![CDATA[Verification Passed for Product Price on Confirmation page]]>
            </line>
            <line>
              <![CDATA[Verification Passed for Product Name]]>
            </line>
            <line>
              <![CDATA[Verification Failed for Product Price]]>
            </line>
          </reporter-output>
        </test-method> <!-- main -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.java.Framework_001Test@15975490]" name="afterMethod" is-config="true" duration-ms="20" started-at="2015-11-26T19:29:05Z" finished-at="2015-11-26T19:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.java.Framework_001Test -->
      <class name="test.java.NewTest">
        <test-method status="PASS" signature="ftest()[pri:0, instance:test.java.NewTest@6b143ee9]" name="ftest" duration-ms="0" started-at="2015-11-26T19:29:05Z" finished-at="2015-11-26T19:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ftest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.java.NewTest@6b143ee9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-11-26T19:29:05Z" finished-at="2015-11-26T19:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.java.NewTest@6b143ee9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-11-26T19:29:05Z" finished-at="2015-11-26T19:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="gtest()[pri:0, instance:test.java.NewTest@6b143ee9]" name="gtest" duration-ms="0" started-at="2015-11-26T19:29:05Z" finished-at="2015-11-26T19:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- gtest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.java.NewTest@6b143ee9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-11-26T19:29:05Z" finished-at="2015-11-26T19:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.java.NewTest@6b143ee9]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-11-26T19:29:05Z" finished-at="2015-11-26T19:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
      </class> <!-- test.java.NewTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
